from flask import Flask, request
import requests
import json
from utils import load_json, save_json

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ config.json
with open("config.json") as f:
    config = json.load(f)

BOT_TOKEN = config["bot_token"]
ADMIN_CHAT_ID = config["admin_chat_id"]
BASE_LANDING_URL = "https://site.com?wm="  # –ú–æ–∂–µ—à –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Å–≤—ñ–π –¥–æ–º–µ–Ω

app = Flask(__name__)
API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö
users = load_json("users.json")
admin_auth = load_json("admin.json")
admin_session = {"authorized": False}


def send_message(chat_id, text, reply_markup=None):
    data = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }
    if reply_markup:
        data["reply_markup"] = json.dumps(reply_markup)
    requests.post(f"{API_URL}/sendMessage", data=data)


def get_keyboard(is_admin=False):
    buttons = [
        [{"text": "–ú–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è"}],
        [{"text": "–°—Ç–∞—Ç—É—Å–∏"}],
        [{"text": "–ú–æ–≤–∞"}]
    ]
    if is_admin:
        buttons.append([{"text": "–ê–¥–º—ñ–Ω"}])
    return {"keyboard": buttons, "resize_keyboard": True}


@app.route('/webhook', methods=["POST"])
def webhook():
    update = request.get_json()

    if "message" in update:
        msg = update["message"]
        chat_id = msg["chat"]["id"]
        user_id = str(chat_id)
        text = msg.get("text", "")
        is_admin = (chat_id == ADMIN_CHAT_ID)

        # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if user_id not in users:
            wm_code = user_id[-4:]
            users[user_id] = {
                "wm": wm_code,
                "username": msg["chat"].get("username", ""),
                "first_name": msg["chat"].get("first_name", "")
            }
            save_json("users.json", users)

        wm_link = f"{BASE_LANDING_URL}{users[user_id]['wm']}"

        # /start
        if text == "/start":
            send_message(chat_id, f"üëã –í—ñ—Ç–∞—é, {msg['chat'].get('first_name', '')}!", get_keyboard(is_admin))
            return "ok"

        # –ú–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è
        if text == "–ú–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è":
            send_message(chat_id, f"üîó –í–∞—à–µ —É–Ω—ñ–∫–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:\n{wm_link}")
            return "ok"

        # –°—Ç–∞—Ç—É—Å–∏ (–∑–∞–≥–ª—É—à–∫–∞)
        if text == "–°—Ç–∞—Ç—É—Å–∏":
            send_message(chat_id, "üïê –°—Ç–∞—Ç—É—Å–∏ –∑–∞—è–≤–æ–∫ —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ. –°–∫–æ—Ä–æ –±—É–¥–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.")
            return "ok"

        # –ú–æ–≤–∞ (–∑–∞–≥–ª—É—à–∫–∞)
        if text == "–ú–æ–≤–∞":
            send_message(chat_id, "üåê –ü–æ–∫–∏ —â–æ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –æ–¥–Ω–∞ –º–æ–≤–∞: —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞.")
            return "ok"

        # –ê–¥–º—ñ–Ω
        if text == "–ê–¥–º—ñ–Ω":
            if not is_admin:
                send_message(chat_id, "‚õî –î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ.")
            elif not admin_session.get("authorized"):
                send_message(chat_id, "üîí –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å:")
            else:
                return send_admin_panel(chat_id)
            return "ok"

        # –í–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
        if is_admin and not admin_session.get("authorized"):
            if text.strip() == admin_auth.get("password"):
                admin_session["authorized"] = True
                return send_admin_panel(chat_id)
            else:
                send_message(chat_id, "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å.")
                return "ok"

    return "ok"


def send_admin_panel(chat_id):
    user_count = len(users)
    wm_list = "\n".join([f"{u['first_name']} ‚Üí {u['wm']}" for u in users.values()])
    text = f"""
üõ†Ô∏è <b>–ê–î–ú–Ü–ù –ü–ê–ù–ï–õ–¨</b>

üë§ –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±–∞—î—Ä—ñ–≤: {user_count}

üìã –°–ø–∏—Å–æ–∫:
{wm_list}
    """.strip()
    send_message(chat_id, text)
    return "ok"


@app.route('/')
def index():
    return "Bot is running."


if __name__ == "__main__":
    app.run(debug=True)
